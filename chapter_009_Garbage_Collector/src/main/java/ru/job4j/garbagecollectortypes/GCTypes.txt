 Используя разные ключи запуска виртуальной машины установить различные виды сборщика мусора.
Оценить поведения срабатывания различных типов сборщиков мусора для программы из первого урока данной модуля.
Как вы считаете какой из сборщиков мусора подойдет наиболее оптимально для приложения заявок из второго модуля?
Какой тип сборщика будет оптимален для сервеного приложения?
500000 объектов

1. Serial GC включается опцией -XX:+UseSerialGC. Требует мало ресурсов. Ситуации STW происходит перед каждой сборкой.
Работу выполняет в одном потоке.
23, 18, 18, 17, 18, 16 - 18.33

2. Parallel GC включается опцией -XX:+UseParallelGC. Меньше паузы во время сборок. Добавляет параллелизм.
Автоматическая подстройка под требуемые параметры производительности.
20, 16, 17, 19, 18, 15 - 17.5

3. CMS GC включается опцией -XX:+UseConcMarkSweepGC. Используется в приложениях, имеющих доступ к нескольким
ядрам процессора и чувствительных к паузам STW. Делает mark и sweep параллельно с работой основной программы.
Он не дожидается заполнения Tenured для того, чтобы начать старшую сборку, работает в фоновом режиме.
Подходит приложениям, использующим большой объем долгоживущих данных.
20, 29, 16, 18, 21, 17 - 18.83

4. G1 включается опцией Java -XX:+UseG1GC. Основная цель G1 - минимизация пауз в работе основного приложения.
Здесь память разбивается на множество регионов одинакового размера. более аккуратно предсказывает размеры пауз, чем CMS,
и лучше распределяет сборки во времени, чтобы не допустить длительных остановок приложения, особенно при больших размерах кучи.
Подходит для приложений с большими кучами (от 4х ГБ и выше).
24, 19, 16, 18, 15, 17 - 18.16

В данном примере лучшее время выполнения было при сборщике Parallel GC.
Для приложения заявок из второго модуля в принципе может подойти любой сборщик мусора, т.к. приложение
не использует много ресурсов и не требовательно к быстродействию.

Для серверного приложения Oracle рекомендует использовать CMS GC. Да, этот сборщик может снизить пропускную способность
для интенсивно испоьзуемых систем, потому что работает постоянно. Но в то же время он предотвращает длительные паузы
STW, которые могут возникнуть в случае, если сборщик мусора работает не часто.